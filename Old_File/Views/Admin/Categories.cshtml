@model List<Entities.Category>
@{
    ViewBag.Title = "WebsiteInformation";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int Count = 0;
}

<div id="category-add-container">

</div>

<div class="category-table">
    <div class="adminpage-head">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <div>
                    <h6 class="m-0 font-weight-bold text-primary text-uppercase">Categories - <span style="color: var(--success);"></span></h6>
                </div>
                <div>
                    <button type="button" class="btn btn-primary" id="add-category" data-toggle="collapse" data-target="#filter-panel">
                        <span class="glyphicon glyphicon-cog"></span> Add Category
                    </button>
                </div>

            </div>
            <div class="card-body table-responsive">
                <table class="cat-table table table-bordered" id="OrderViewTable" cellspacing="0">
                    <thead class="thead-dark">
                        <tr>
                            <th>#</th>
                            <th>Category</th>
                            <th style="width:25%">Description</th>
                            <th style="width:20%">Cover Img</th>
                            <th style="width:20%">Banner Img</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            Count = Count + 1;
                            <tr>
                                <td>@Count</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td><img src="@item.CoverImage" style="width:50%" /></td>
                                <td><img src="@item.BannerImage" style="width:50%" /></td>
                                <td>
                                    <div class="form-check form-check-inline">
                                        @{
                                            var trueCheckedStatus = item.Status == true ? "Checked" : string.Empty;
                                        }
                                        <input type="hidden" name="Status" value='@item.Status' id="chkstatus" title="Status" />
                                        <input class="form-check-input" data-id="@item.Id" id="chkstatus" type="checkbox" @trueCheckedStatus>
                                    </div>
                                </td>
                                <td>
                                    <div class="row">
                                        <div class="button-act"><button class="editbtn btn btn-default btn-outline-dark" type="button" data-id="@item.Id" title="Edit"><i class="bi bi-pencil-square"></i></button></div>
                                        <div style="display:none" class="button-act"><button class="deletebtn btn btn-default btn-outline-danger" type="button" data-id="@item.Id" title="Delete"><i class="bi bi-trash"></i></button></div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#cat-table").DataTable();
        $("#category-add-container").hide();
        
    });


    $("#add-category").click(function () {
        $("#category-add-container").show();
        $.ajax({
            url: '@Url.Action("CategoryAdd", "Admin")',
        })
            .done(function (response) {
                $("#category-add-container").html(response);
        })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!',
                })
        });
    });

    //--------------Edit-btn--------------------//

    $(".editbtn").click(function() {
        $("#category-add-container").show();
        $.ajax({
            url: '@Url.Action("CategoryEdit", "Admin")',
            data: {
                id: $(this).attr('data-id')
            }
        })
        .done(function (response) {
            $("#category-add-container").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            $('.loadermodel').hide();
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            })
        });
    });

    //------------//--Edit-btn--//------------------//

    //--------------Delete-btn--------------------//

    $(".deletebtn").click(function () {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("InfoDelete", "Admin")',
                    data: {
                        id : $(this).attr('data-id')
                    }
                })
                    .done(function (response) {
                        if (response == "True") {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Your work has been saved',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            setTimeout(function () {// wait for 5 secs(2)
                                window.location.reload(); // then reload the page.(3)
                            }, 1550);
                        }
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    $('.loadermodel').hide();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    })
                });
            }
        })
    });

    //------------//--Delete-btn--//------------------//

    //--------------Status-chechbox--------------------//

    $('input[type="checkbox"]').on('change', function () {
        if ($(this).prop("checked") == true) {
            Swal.fire({
            title: 'Are you sure?',
            text: "You want to change the status!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title:'Status',
                    text:'Changed',
                    icon:'success',
                    showConfirmButton: false,
                })
            var CatId = $(this).attr("data-id");
            var Status = true;
            $.ajax({
                type:'POST',
            url: '@Url.Action("CategoryStatus", "Admin")',
            data: {
                status: Status,
                catId: CatId
            }
        })
        .done(function (response) {
            if (response == true) {
                Swal.fire({
                    title: 'Done',
                    text: 'Successfully Change the status!',
                })
            }
            else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong!',
                })
            }
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
            })
        });
            }
            else {
                window.location.reload();
            }
        })
        }
        else if ($(this).prop("checked") == false) {
         Swal.fire({
            title: 'Are you sure?',
            text: "You want to change the status",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Change it!'
        }).then((result) => {
            if (result.isConfirmed) {
                //Swal.fire({
                //    title: 'Status',
                //    text: 'Changed',
                //    icon: 'success',
                //    showConfirmButton: false,
                //})
                var CatId = $(this).attr("data-id");
                var Status = false;
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CategoryStatus", "Admin")',
                    data: {
                        status: Status,
                        catId: CatId
                    }
                })
                    .done(function (response) {
                        if (response == true) {
                            Swal.fire({
                                title: 'Done',
                                text: 'Successfully Change the status!',
                            })
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!',
                            })
                        }
                    })
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                        })
                    });
            }
            else {
                window.location.reload();
            }
        })
        }

    });

    //------------//--Status-chechbox--//------------------//




</script>