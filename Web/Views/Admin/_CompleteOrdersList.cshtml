
@model DataModels.OrdersViewModel
@{
    Layout = null;
    int count = 0;
}
<style>
    #OrderViewTable_filter {
        position: absolute;
        right: 0;
        top: 0px;
    }
</style>
<table class="product-table table table-bordered table-responsive mt-3" id="OrderViewTable" cellspacing="0" style="width:99%;">
    <thead class="thead-dark">
        <tr>
            <th>#</th>
            <th class="noprint">Action</th>
            <th>
                Date
            </th>
            <th>
                Order Id
            </th>
            <th>
                Customer
            </th>
            <th>
                Contact
            </th>
            <th>
                Email
            </th>
            <th>
                Amount
            </th>
            <th>
                Del. Charges
            </th>
            <th>
                Total Amount
            </th>
            <th>
                Payment Status
            </th>
            <th>
                Order Status
            </th>
            <th>
                Payment Method
            </th>
            <th>
                Pincode
            </th>
            <th>
                Shipping Address
            </th>
        </tr>
    </thead>
    @foreach (var item in Model.Orders)
    {
        count = count + 1;
        <tr id="@("tr"+item.OrderId)">
            <td>@count</td>
            <td class="noprint">
                <div>
                    <button class="btn btn-primary orderDetails" data-bs-toggle="modal" data-bs-target="#staticBackdrop" data-id="@item.OrderId"><i class="bi bi-eye"></i></button>
                </div>
            </td>
            <td>
                @item.CreatedOn.ToString("MMMM-dd-yyyy")
            </td>
            <td style="padding: 15px 42px;">
                @item.OrderId
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReceiverName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReceiverMobileNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReceiverEmail)
            </td>
            <td style=" padding: 15px 52px;">
                @Html.DisplayFor(modelItem => item.BillAmount)
            </td>
            <td style=" padding: 15px 52px;">
                @Html.DisplayFor(modelItem => item.DeliveryCharges)
            </td>
            <td style=" padding: 15px 52px;">
                @Html.DisplayFor(modelItem => item.TotalAmount)
            </td>
            <td id="@("PaymentStatusPrint" + item.OrderId)">
                @item.PaymentStatusString
            </td>
            <td id="@("orderStatusPrint" + item.OrderId)">
                @item.OrderStatusString
            </td>
            <td style="padding: 15px 55px;">
                @Html.DisplayFor(modelItem => item.PaymentTypeString)
            </td>
            <td style="text-align: initial !important;">
                @Html.DisplayFor(modelItem => item.PinCode)
            </td>
            <td style="text-align: initial !important;">
                @Html.DisplayFor(modelItem => item.ShippingAddress)
            </td>
        </tr>
    }
</table>
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content bg-transparent border-0">
            <div class="modal-body orderdetailsPartial">

            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        $('#OrderViewTable').DataTable({
            "ordering": true,
            "dom": 'Bfrtip',
            buttons: [
                {
                    extend: 'excel',
                    exportOptions: {
                        columns: "thead th:not(.noprint)",
                    }
                },
                {
                    extend: 'csv',
                    exportOptions: {
                        columns: "thead th:not(.noprint)",
                    }
                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: "thead th:not(.noprint)",
                    },
                },
            ],
            "sEmptyTable": "You do not have records."
        });
        var countPO = '@Model.Orders.Count()';
        $("#OrdersCount").html(countPO);
    });
     $(".orderDetails").click(function () {
        var dataId = $(this).attr('data-id');
        $.ajax({
            url: '@Url.Action("OrderDetails", "Admin")',
            data: {
                OrderID: dataId,
            }
        })
        .done(function (response) {
            $(".orderdetailsPartial").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
           Swal.fire({
               icon: 'error',
               title: 'Oops...',
               text: 'Something went wrong!',
           })
        });
    });
</script>